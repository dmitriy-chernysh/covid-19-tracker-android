version: 2.0

config_android: &config_android
  docker:
    - image: circleci/android:api-29
  working_directory:  ~/code
  environment:
    JAVA_TOOL_OPTIONS: "-Xmx4096m"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process"
    TERM: dumb

update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      yes | sdkmanager --licenses || true
      sdkmanager "platform-tools" "platforms;android-29"

update_dependencies: &update_dependencies
  restore_cache:
    - key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
        command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew dependencies
    - save_cache:
        paths:
          - ~/.gradle/caches
          - ~/.gradle/wrapper
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}


jobs:
  run_tests:
    <<: *config_android
    steps:
      - <<: *update_sdk
      - checkout
      - <<: *update_dependencies
      - run:
          name: Run Tests
          command: ./gradlew testProductionDebug
      - run:
          name: Save test results (html page, see Artifacts)
          command: |
            mkdir -p test-results/html/
            find . -type d -regex ".*/*reports/tests" -exec cp -avr {} test-results/html/ \;
          when: always
      - run:
          name: Save test results (xml results, see Tests)
          command: |
            mkdir -p test-results/xml/
            find . -type f -regex ".*/*test-results/.*xml" -exec cp {} test-results/xml/ \;
          when: always
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: reports/

  build_release:
    <<: *config_android
    steps:
      - <<: *update_sdk
      - checkout
      - <<: *update_dependencies
      - run:
          name: Assemble release build
          command: ./gradlew clean assembleRelease --no-daemon --stacktrace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/

  deploy_release:
    #deploy:
    #  name: Deploy to TestFairy
    #  command: ./build-testfairy-upload.sh
    deploy:
      name: Deploy to DropBox
      command: ./build-dropbox-upload.sh

workflows:
  version: 2
  build:
    jobs:
      - run_tests

      - build_release:
          requires:
            - run_tests
          filters:
            branches:
              only:
                #- master
                - config-ci-again

      - deploy_release:
          requires:
            - build_release
          filters:
            tags:
              only:
                - /^v.*/



  # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples